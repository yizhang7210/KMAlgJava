x <- list(1:2)
tmp = expand.grid(rep(x, 10))
View(tmp)
source('~/.active-rstudio-document')
View(fun)
fun <- apply(fun, 1, rev)
View(fun)
source('~/.active-rstudio-document')
View(fun)
vals1 <- c(4,-2,4,-2,4,-2,4,-2)
vals2 <- c(7,7,4,4,-3,-3,-7,-7)
rep(vals, 3)
rep(vals1, 3)
?rep
rep(vals1, each=3)
source('~/.active-rstudio-document')
vals
source('~/.active-rstudio-document')
vals
source('~/.active-rstudio-document')
View(fun)
1:8*4:11
6%2
6%%2
5%%2
?nrow
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getCoef(c(0,0,0,0,0,0))
getCoef(c(0,0,1,0,0,0))
getCoef(c(0,0,1,0,1,0))
View(funVal)
getCoef(c(0,0,0,0,1,0))
getCoef(c(0,0,0,0,1,1))
apply(getCoef, fun)
apply(fun,1, getCoef)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(coefVal)
source('~/.active-rstudio-document')
newVals
fun
f(c(0,0,0,0,0,0))
coefVal
coefVal[1,7]
x <- c(0,0,0,0,0,0)
char(coefVal[1,1:6], x)
char(coefVal[2,1:6], x)
char(coefVal[5,1:6], x)
char(coefVal[8,1:6], x)
x <- c(0,0,0,0,0,1)
char(coefVal[1,1:6], x)
View(coefVal)
char(coefVal[2,1:6], x)
char(coefVal[2,1:6], x)*coefVal[2,7]
char(coefVal[1,1:6], x)*coefVal[1,7]
char(coefVal[3,1:6], x)*coefVal[3,7]
char(coefVal[5,1:6], x)*coefVal[5,7]
x
View(funVal)
View(coefVal)
f(x)
debugSource('~/00ME/Education/UW/CS860/JavaImp/ExtendSparseFun.R')
debugSource('~/00ME/Education/UW/CS860/JavaImp/ExtendSparseFun.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(coefVal)
source('~/.active-rstudio-document')
nrow(coefVal)
source('~/.active-rstudio-document')
newVasl
newVals
funVal[,7]
funVal[,7] - newVals
225*16
312*4
f <- function(t,d){return(16*t^2 + 225*d^2 - 132*t*d)}
?outer
ts <- 1:10
ds <- seq(0,4,by=0.5)
ds
outer(ts,ds)
outer(ts,ds, FUN=f)
ds
ts <- 1:100
outer(ts,ds, FUN=f)
z <- outer(ts,ds, FUN=f)
countour(z,ts,ds)
contour(z,ts,ds)
?contour
contour(ts,ds,z)
f <- function(t,d){return(64*t^2 + 225*d^2 - 132*t*d)}
z <- outer(ts,ds, FUN=f)
z
f <- function(t,d){return((16/3)^2*t^2 + 225*d^2 - 132*t*d)}
z <- outer(ts,ds, FUN=f)
z
f <- function(t,d){return((16/4)^2*t^2 + 225*d^2 - 132*t*d)}
outer(ts,ds, FUN=f)
f <- function(t,d){return((16/3)^2*t^2 + 225*d^2 - 132*t*d)}
outer(ts,ds, FUN=f)
source('~/.active-rstudio-document')
View(newTable)
normedTable <- newTable;
n <- ncol(normedTable)
n
dim(normedTable)
normedTable[,n] <- normedTable[,n] - mean(normedTable[,n])
normedTable[,n] <- normedTable[,n]/max(abs(normedTable[,n]))
View(normedTable)
max(normedTable[,n])
min(normedTable[,n])
mean(normedTable[,n])
normedPath <- paste(newSys, '/normedFun.csv', sep='');
write.table(matrix(dim(normedTable),1,2), normedPath, row.names=F, col.names=F, quote=F, sep=" ");
write.table(normedTable, normedPath, row.names=F, col.names=F, quote=F, sep=" ", append=T);
source('~/.active-rstudio-document')
View(expErr)
source('~/.active-rstudio-document')
aves
maxis
maxs
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/00ME/Education/UW/CS860/JavaImp/newErrAnalysis.R')
source('~/.active-rstudio-document')
colSums(expErr)
rowSums(expErr)
rowMeans(expErr)
aves
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/00ME/Education/UW/CS860/JavaImp/newErrAnalysis.R')
source('~/.active-rstudio-document')
source('~/00ME/Education/UW/CS860/JavaImp/newErrAnalysis.R')
