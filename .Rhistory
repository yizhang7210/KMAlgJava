x <- list(1:2)
tmp = expand.grid(rep(x, 10))
View(tmp)
source('~/.active-rstudio-document')
View(fun)
fun <- apply(fun, 1, rev)
View(fun)
source('~/.active-rstudio-document')
View(fun)
vals1 <- c(4,-2,4,-2,4,-2,4,-2)
vals2 <- c(7,7,4,4,-3,-3,-7,-7)
rep(vals, 3)
rep(vals1, 3)
?rep
rep(vals1, each=3)
source('~/.active-rstudio-document')
vals
source('~/.active-rstudio-document')
vals
source('~/.active-rstudio-document')
View(fun)
1:8*4:11
6%2
6%%2
5%%2
?nrow
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getCoef(c(0,0,0,0,0,0))
getCoef(c(0,0,1,0,0,0))
getCoef(c(0,0,1,0,1,0))
View(funVal)
getCoef(c(0,0,0,0,1,0))
getCoef(c(0,0,0,0,1,1))
apply(getCoef, fun)
apply(fun,1, getCoef)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(coefVal)
source('~/.active-rstudio-document')
newVals
fun
f(c(0,0,0,0,0,0))
coefVal
coefVal[1,7]
x <- c(0,0,0,0,0,0)
char(coefVal[1,1:6], x)
char(coefVal[2,1:6], x)
char(coefVal[5,1:6], x)
char(coefVal[8,1:6], x)
x <- c(0,0,0,0,0,1)
char(coefVal[1,1:6], x)
View(coefVal)
char(coefVal[2,1:6], x)
char(coefVal[2,1:6], x)*coefVal[2,7]
char(coefVal[1,1:6], x)*coefVal[1,7]
char(coefVal[3,1:6], x)*coefVal[3,7]
char(coefVal[5,1:6], x)*coefVal[5,7]
x
View(funVal)
View(coefVal)
f(x)
debugSource('~/00ME/Education/UW/CS860/JavaImp/ExtendSparseFun.R')
debugSource('~/00ME/Education/UW/CS860/JavaImp/ExtendSparseFun.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(coefVal)
source('~/.active-rstudio-document')
nrow(coefVal)
source('~/.active-rstudio-document')
newVasl
newVals
funVal[,7]
funVal[,7] - newVals
isHome = T;
if(isHome){
setwd('/home/yzhang/00ME/Education/UW/CS860/JavaImp/');
}else{
setwd('/home/y825zhan/00ME/CS860/JavaImp/');
}
systems <- c("Apache", "X264", "LLVM", "BDBC", "BDBJ", "Test")
#systems <- c("LLVM2", "LLVMX264", "Test2");
sys1 <- systems[6];
sys2 <- systems[6];
newSys <- "Test2";
origPath1 <- paste(sys1, '/rawFun.csv', sep='');
origPath2 <- paste(sys2, '/rawFun.csv', sep='');
writePath <- paste(newSys, '/rawFun.csv', sep='');
origTable1 <- as.matrix(read.csv(origPath1, sep = "", header = F, skip = 1));
origTable2 <- as.matrix(read.csv(origPath2, sep = "", header = F, skip = 1));
newTable <- cbind(origTable1[rep(1:nrow(origTable1), nrow(origTable2)),],
origTable2[rep(1:nrow(origTable2), each=nrow(origTable1)),]);
newVals <- newTable[,ncol(origTable1)]+newTable[,ncol(newTable)];
newTable <- cbind(newTable[,c(-ncol(origTable1),-ncol(newTable))], newVals)
colnames(newTable) <- NULL
write.table(matrix(dim(newTable),1,2), writePath, row.names=F, col.names=F, quote=F, sep=" ");
write.table(newTable, writePath, row.names=F, col.names=F, quote=F, sep=" ", append=T);
